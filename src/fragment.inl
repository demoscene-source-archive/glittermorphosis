#pragma data_seg(".shader")
const char* vertex =
 "#version 130\n"
 "out vec4 gl_TexCoord[2];"
 "float g,z=6.283;"
 "float s()"
 "{"
   "return fract(sin(g++)*43758.5);"
 "}"
 "mat2 s(float s)"
 "{"
   "return mat2(cos(s),sin(s),-sin(s),cos(s));"
 "}"
 "vec4 p(float v)"
 "{"
   "float c,y,x,i,m;"
   "vec4 f,a,e,p;"
   "g=int(gl_Vertex.x)*73856093%38069;"
   "v-=clamp(v-30,0,.5)*2;"
   "v-=clamp(v-30,0,.5)*2-2;"
   "x=s()*z;"
   "i=sqrt(s());"
   "m=v/50+v/6.7*smoothstep(5,70,v)+(s()*2-1);"
   "c=fract(m);"
   "vec3 w=normalize(vec3(cos(x)*i,1.5,sin(x)*i))*(5+s());"
   "w.y+=s()*3-16*c;"
   "w*=c;"
   "w.xz=s(pow(max(0,(v-40+s()*8)/8.5),4))*(w.xz+(vec2(s(),s())-.5)*.03);"
   "f=vec4(w+vec3(0,-.2,.8),(step(c,.9)+step(c,.02)*2)*step(1,m-c));"
   "m=v-49;"
   "c=s();"
   "y=s();"
   "x=c*z+cos((c-.15)*z*5)*.07;"
   "w=vec3(s(),s(),s())*2-1;"
   "w.xz*=s(m/10);"
   "a=vec4(w,1);"
   "if(s()<.8)"
     "w=mix(vec3(sin(x),-cos(x),0)*(.9-pow(.1-.1*cos(x*5),.65)),vec3(0,0,float(s()<.5)*.08-.04),y*y),w.z=sqrt(abs(w.z))*sign(w.z),w.xy*=s(-(m/7+m*3.8571/exp(m/50))),w.xz*=s(-z/4/exp(max(0,m-4)/7)),a=vec4(w.yxz*(.6+.4/exp(m/10)),smoothstep(0,.4,length(w.xy))),a.z+=.7;"
   "y=s();"
   "x=-asin(1-2*s());"
   "m=1;"
   "w=vec3(s(),s(),s())*2-1;"
   "w.xz*=s(v/10);"
   "e=vec4(w,.5);"
   "if(s()<.4)"
     "{"
       "w=vec3(cos(x),sin(x),0);"
       "w.xz*=s(y*z);"
       "if(s()<.5)"
         "x=s()*z,w=vec3(cos(x),sin(x),0)*(1.1+.3*y),m=-1;"
       "w.xy*=s(v+smoothstep(78,83,v)*9);"
       "w.xz*=s(.5);"
       "w.yz*=s(-1.3);"
       "e=vec4(w/2,m);"
       "e.z+=1.25;"
     "}"
   "v-=87;"
   "x=.02*z+.96*z*s();"
   "m=1;"
   "w=vec3(s(),s(),s())*2-1;"
   "w.xz*=s(mix(v/10,2.9,smoothstep(24,33,v)));"
   "p=vec4(w,.2-.2*clamp((v-24)/30,0,1));"
   "if(s()<.5)"
     "{"
       "w=mix(vec3(-sin(x)*sqrt(cos(x)+1.05),cos(x),0)*sin(x/2),vec3(0,-.3,float(s()<.5)*.08-.04),.98*pow(s(),2));"
       "w.z=sqrt(abs(w.z))*sign(w.z);"
       "w.xz*=s(cos(v/4)/8);"
       "x=mod(v+s()*20,20)-15;"
       "if(x<0&&v>8&&v<24)"
         "x=fract(v/2-.25),w*=1+.07*sin(x*50)/exp(x*4);"
       "else"
         " w.y-=pow(max(0,x),2.5)/4;"
       "if(v>24)"
         "w.xyz+=normalize(vec3(s(),s(),s())-.5)*(v/24-1),m=1-clamp(v/24-1,0,1);"
       "p=vec4(w+vec3(0,.3,1),m);"
     "}"
   "v+=87;"
   "x=pow(1-fract(v),4)*.005;"
   "c=.04*(.6+.4*cos(gl_Vertex.x))+pow(.5+.5*cos(gl_Vertex.x*7+v/4),512);"
   "f.w*=-c;"
   "a.w*=sign(cos(gl_Vertex.x*3))*c;"
   "a.w+=sign(a.w)*x;"
   "e.w*=-c;"
   "e.w+=sign(e.w)*x;"
   "p.w*=c*1.5;"
   "return mix(mix(mix(f,a,smoothstep(0,5,pow(v-45,.7)/1.3)),e,smoothstep(0,5,(v-71)/1.3)),p,smoothstep(0,5,(v-87)/1.3));"
 "}"
 "void main()"
 "{"
   "vec4 w=p(gl_MultiTexCoord0.x-1/24),s=p(gl_MultiTexCoord0.x);"
   "w.xy*=400/w.z;"
   "s.xy*=400/s.z;"
   "float v=.15+.07*smoothstep(1.5,23,gl_MultiTexCoord0.x),x=v/(1-2*v/(w.z+s.z)),m=clamp((.3-x)/x*128,-128,127);"
   "gl_TexCoord[0]=vec4(w.w,m,gl_Vertex.x+gl_MultiTexCoord0.x*100,1);"
   "gl_TexCoord[1]=vec4(w.xy,s.xy);"
   "gl_PointSize=ceil(max(abs(s.x-w.x),abs(s.y-w.y))+abs(m))+4;"
   "gl_Position=vec4((w.xy+s.xy)/vec2(1280,720),0,1);"
   "if(w.z<0||s.z<0||abs(w.w)<.002)"
     "gl_PointSize=0;"
 "}";
#pragma data_seg(".shader")
const char* fragment =
 "#version 130\n"
 "in vec4 gl_TexCoord[2];"
 "uniform sampler2D A;"
 "uniform sampler3D B;"
 "float v=(int(gl_TexCoord[0].z)*73856093^int(gl_FragCoord.x)*19349663^int(gl_FragCoord.y)*83492791)%38069;"
 "float s()"
 "{"
   "return fract(sin(v++)*43758.5);"
 "}"
 "float s(vec2 w)"
 "{"
   "w*=pow(dot(w,w),.1);"
   "w.x*=.8;"
   "float v=w.x*1.414;"
   "w=pow(abs(vec2(w.x+w.y,w.x-w.y)-v/6),vec2(16));"
   "return exp((-w.x-w.y-pow(v*v,8))*8);"
 "}"
 "void main()"
 "{"
   "gl_FragColor=vec4(0);"
   "float v=s(),x,w;"
   "if(gl_TexCoord[0].w==3)"
     "{"
       "gl_FragColor=texelFetch(A,ivec2(gl_FragCoord.xy),0);"
       "for(int y=-31;y<32;++y)"
         "for(int z=0;z<3;++z)"
           "x=v+y,gl_FragColor+=texelFetch(A,ivec2(gl_FragCoord.xy+x*3*normalize(vec2(1,-2+z*2)))/2,1)*pow(1-abs(x)/48,2)/56;"
       "for(int m=-6;m<7;++m)"
         "for(int y=-6;y<7;++y)"
           "gl_FragColor+=textureLod(A,(gl_FragCoord.xy+vec2(m,y)*64)/vec2(1280,720),6)/16*max(0,1-length(vec2(m,y)/8));"
       "gl_FragColor*=mat4(vec2(1,.5).xxyy,vec2(.5,.7).xxyy,vec2(.3,1).xxyy,vec4(0));"
       "gl_FragColor/=gl_FragColor*.56+.45;"
     "}"
   "else"
     " if(gl_TexCoord[0].w==2)"
       "{"
         "for(int m=-3;m<4;++m)"
           "for(int y=-3;y<4;++y)"
             "{"
               "x=gl_TexCoord[0].x-128;"
               "vec2 g=(vec2(m,y)/6+gl_FragCoord.xy)/(abs(x)+2);"
               "w=exp(-length(g));"
               "gl_FragColor.xy+=(x<0?vec2(s(g)*1.75,.5*w*w*w)*w*w:vec2(s(g),(s(g)-s(g+normalize(g)*2/(abs(x)+2)))/4))/49;"
             "}"
       "}"
     "else"
       "{"
         "vec2 m=gl_FragCoord.xy-vec2(640,360),g=gl_TexCoord[1].xy,y=gl_TexCoord[1].zw-g;"
         "w=gl_TexCoord[0].y;"
         "if(abs(dot(m-g,normalize(y).yx*vec2(1,-1)))>abs(w)/2+4)"
           "discard;"
         "for(int z=0;z<16;++z)"
           "gl_FragColor.xy+=texelFetch(B,ivec3(abs(g+y*(v+z)/16-m)+vec2(s(),s())-.5,w/2+128),0).xy;"
         "w=abs(w)+4;"
         "gl_FragColor=(gl_TexCoord[0].x>0?gl_FragColor.xxyy:gl_FragColor.yyxx)/(w*w)*8*abs(gl_TexCoord[0].x);"
       "}"
   "gl_FragColor+=(vec4(s(),s(),s(),s())-.5)/255;"
 "}";
